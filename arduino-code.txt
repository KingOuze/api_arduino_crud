#include <IRremote.h>  
#include "DHT.h"
#include <Keypad.h> // Include Keypad library

#define Type DHT11
#define ledR 8
#define ledV 7

int sensorPin = 2;
DHT objetDHT11(sensorPin, Type);
float humidite;
float tempC;
float tempF;
int setime = 500;
int delayTime = 1000;
int vitessMoteur = 5;
int direction1 = 3;
int direction2 = 4;
const int buzzer = 9;
int VitessMaxMoteur = 255;
const int RECV_PIN = 10; // IR receiver pin
IRrecv capteurIR(RECV_PIN);
decode_results decodage;

// Keypad setup
const byte ROWS = 4; // Four rows
const byte COLS = 4; // Four columns
char keys[ROWS][COLS] = {
  {'1', '2', '3', 'A'},
  {'4', '5', '6', 'B'},
  {'7', '8', '9', 'C'},
  {'*', '0', '#', 'D'}
};
byte rowPins[ROWS] = {11, 12, A0, A1}; // Connect to the row pinouts of the keypad
byte colPins[COLS] = {A2, A3, A4, A5}; // Connect to the column pinouts of the keypad
Keypad keypad = Keypad(makeKeymap(keys), rowPins, colPins, ROWS, COLS);

bool fanState = false; // Track fan state

void setup() {
  capteurIR.enableIRIn();
  capteurIR.blink13(false);
  pinMode(vitessMoteur, OUTPUT);
  pinMode(direction1, OUTPUT);
  pinMode(direction2, OUTPUT);
  Serial.begin(9600);
  objetDHT11.begin();
  delay(setime);
  pinMode(ledV, OUTPUT);
  pinMode(ledR, OUTPUT);
  Serial.println("System Ready. Type 'ON' or 'OFF' to control the fan.");
}

void loop() {
  humidite = objetDHT11.readHumidity();
  tempC = objetDHT11.readTemperature();
  tempF = objetDHT11.readTemperature(true);

  // Handle serial input for fan control
  handleSerialInput();

  // Handle IR remote input
  if (capteurIR.decode(&decodage)) {
    if (decodage.value == 0xFF30CF) {
      // Start fan
      fanState = true;
      controlFan(fanState);
      Serial.println("Ventillateur Demarrer");
    } else {
      // Stop fan
      fanState = false;
      controlFan(fanState);
    }
    Serial.println(decodage.value, HEX);
    capteurIR.resume();
    delay(500);
  }

  delay(delayTime);

  // Automatic fan control based on temperature
  if (!fanState) { // Only control automatically if the fan isn't manually controlled
    if (tempC <= 26) {
      fanState = false;
      controlFan(fanState);
      ledOn(ledV);
      ledOff(ledR);
    } else {
      fanState = true;
      controlFan(fanState);
      ledOn(ledR);
      ledOff(ledV);
    }
  }

  // Display temperature and humidity
  sendSensorData(tempC, humidite);

  // Keypad handling
  char key = keypad.getKey();
  if (key) {
    Serial.println("Keypad pressed: ");
    Serial.println(key);
    stopDataTransmission();
    sendKeypadData(key);
  }

  capteurIR.resume();
  delay(500);
}

// Subprograms

void ledOn(int numLed) {
  digitalWrite(numLed, HIGH);
}

void ledOff(int numLed) {
  digitalWrite(numLed, LOW);
}

void controlFan(bool state) {
  if (state) {
    digitalWrite(direction1, HIGH);
    digitalWrite(direction2, LOW);
    digitalWrite(vitessMoteur, VitessMaxMoteur);
    tone(buzzer, 1000, 500);
  } else {
    digitalWrite(direction1, LOW);
    digitalWrite(direction2, LOW);
    noTone(buzzer);
  }
}

void handleSerialInput() {
  if (Serial.available() > 0) {
    String command = Serial.readStringUntil('\n');
    command.trim(); // Remove whitespace
    if (command.equalsIgnoreCase("ON")) {
      fanState = true;
      controlFan(fanState);
      Serial.println("Fan turned ON via Serial");
    } else if (command.equalsIgnoreCase("OFF")) {
      fanState = false;
      controlFan(fanState);
      Serial.println("Fan turned OFF via Serial");
    }
  }
}

void stopDataTransmission() {
  // Stop data transmission for 5 seconds
  Serial.println("Pausing data transmission...");
  unsigned long startTime = millis();
  while (millis() - startTime < 5000) {
    char key = keypad.getKey(); // Handle keypad input during pause
    if (key) {
      sendKeypadData(key);
    }
  }
  Serial.println("Resuming data transmission...");
}

void sendSensorData(float temp, float hum) {
    
    Serial.print("{\"type\":\"sensor\",\"temperature\":");
    Serial.print(temp);
    Serial.print(",\"humidity\":");
    Serial.print(hum);
    Serial.println("}");
}

void sendKeypadData(char key) {
    Serial.print("{\"type\":\"keypad\",\"value\":\"");
    Serial.print(key);
    Serial.println("\"}");
}
